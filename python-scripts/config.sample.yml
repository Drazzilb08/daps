# This is a sample config file for the python scripts
# You can copy this file and rename it to config.yml
# You can also rename the scripts to whatever you want, just make sure to update the config file to match
# The config file is broken up into sections, each section is a script
# Each script has a log_level and dry_run option
# log_level can be debug, info, warning, error, critical
# dry_run can be true or false
# The rest of the options are script specific
global:
  radarr:
    # name is the name of the radarr instance, this is used to reference the instance in other scripts
    - name: radarr_1
    # api is the api key for the radarr instance
      api: abcdefghijlmnop
    # url is the url for the radarr instance
      url: http://localhost:7878
    - name: radarr_2
      api: abcdefghijklmnop
      url: http://localhost:1212
  sonarr:
    # name is the name of the sonarr instance, this is used to reference the instance in other scripts
    - name: sonarr_1
    # api is the api key for the sonarr instance
      api: abcdefghijlmnop
    # url is the url for the sonarr instance
      url: http://localhost:8989
    # name is the name of the second sonarr instance, this is used to reference the instance in other scripts, names must match
    - name: sonarr_2
      api: abcdefghijlmnop
      url: http://localhost:9090
  plex:
    # name is the name of the plex instance, this is used to reference the instance in other scripts
    - name: plex
    # api is the token key for the plex instance, if you don't know your token please see https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/
      api: abcdefghijlmnop
    # url is the url for the plex instance
      url: http://localhost:32400

# The upgradinatorr script is used to upgrade movies and tv shows, it can be used to upgrade all movies and tv shows or just a subset.
# WARNING: This script can caues havoc with your usenet provider or torrent tracker if you are not careful.
# I am not responsible for any issues that may arise from using this script.
# Please use this script at your own risk.
# Best practice is to keep the count variable low, 1-5 is a good number.
upgradinatorr:
  log_level: info
  dry_run: true
  radarr:
    - name: radarr_1
      count:
      monitored: true
      status: released
      tag_name:
      unattended: false
    - name: radarr_2
      count:
      monitored: true
      status: released
      tag_name:
      unattended: false
  sonarr:
    - name: sonarr_1
      count:
      monitored: true
      status: continuing
      tag_name:
      unattended: false
    - name: sonarr_2
      count:
      monitored: true
      status: continuing
      tag_name:
      unattended: false

# The renameinatorr script is used to rename movies and tv shows, it can be used to rename all movies and tv shows or just a subset.
# This script is meant to keep your library clean and tidy, it will rename your movies and tv shows to match criteria set in Media Management tag of Radarr/Sonarr.
renameinatorr:
  log_level: info
  dry_run: true
  radarr:
    - name: radarr_1
      count: 1
      tag_name: renamed
      unattended: false
      reset: false
  sonarr:
    - name: sonarr_1
      count: 1
      tag_name: renamed
      unattended: false
      reset: false

# The renamer script is used to rename your posters to match your Plex Collections and Media Folder names for Movies and TV Shows
# This script is meant to be used in conjuction with Plex-Meta-Manager, however it can be used on it's own.
renamer:
  # Script Note: --> is a copy/move & rename / -->> is a copy/move w/o rename
  log_level: info
  # Options are 'true' or 'false'
  dry_run: true
  # Options are 'Copy' or 'Move'
  action_type: move
  print_only_renames: true
  # Library names are used to match collections posters to the collections listed w/in Plex. Typically Movie Libraries are used
  library_names:
    - Movies
    - Anime Movies
  # Where your ingest movies folder is (THe source and destination should not be the same directory)
  source_dir: /path/to/posters/
  # Where your posters are going to go. In my usecase I use Plex-Meta-Manager. This is the /config/assets dir for PMM for me.
  destination_dir: /path/to/poster/destination
  # The thresholds are used to consider what is a "Match", As with any automation there is never a 100% guarantee of accuracy. There will be times the script will mess up.
  # If however you see it messing up more often on things you can restrict the threshold.
  # 0 = Anything goes, 100 = Must be exact match
  # The default numbers here are based upon what I've seen to be the most effective, I've had one-offs where I had to manually fix things. 
  # Eg. Hanna vs Anna, One letter difference and in the case I had the years were the same too.
  movies_threshold: 87
  series_threshold: 87
  collection_threshold: 99
  # Decide which radarr instance you will be using for renamer, this is useful if you have for example: A Sonarr/Sonarr-Anime and/or Radarr/Radarr-Anime
  # If you however duplicate entries between a Radarr/Radarr4K for example. this won't help and will only double the work for the script for no gain.
  radarr:
    - name: radarr_1
  sonarr:
    - name: sonarr_1
    - name: sonarr_2

# This is a script that will take your existing collections, Movies, and Series, and match them to your Plex Library and/or your Media Dir
unmatched-assets:
  log_level: info
  # Optional: Add libraries you want the script to check for unmatched assets
  library_names:
    - Movies
    - Anime Movies
  # Optional: Add collections you'd like to ignore
  # These defaults are based upon my own usecase, you can remove them or add your own
  ignore_collections:
    - "Star Wars Universe"
    - "DC Animated Universe"
    - "Alien / Predator"
    - "Rocky / Creed"
    - "MonsterVerse"
    - "Star Trek"
    - "X-Men Universe"
    - "In Association With Marvel"
    - "View Askewniverse"
    - "The Mummy Universe"
    - "Middle Earth"
    - "In Association With DC"
    - "Wizarding World"
    - "Fast & Furious"
    - "The Spiderverse"
    - "Marvel Cinematic Universe"
    - "The Conjuring Universe"
    - "The Batman Universe"
    - "Collectionless"
    - "DC Extended Universe"
  assets_path: /path/to/poster-assets/
  media_paths:
    - /path/to/media/folders/movies
    - /path/to/media/folders/tv-shows

# Paths should be the same paths that you use for your radarr/sonarr instance but should be full paths, not the ones you use if using docker
# Eg. /mnt/user/data/media/movies/ or /mnt/user/data/media/tv-shows/
# Include/Exclude profiles are used to filter out movies/tv shows that you don't want to be considered for the script
# You can leave them blank if you want to include all profiles
# Exclude series is used to exclude series that you don't want to be considered for the script
nohl:
  dry_run: false
  maximum_searches: 10
  radarr:
    - name: radarr_1
      paths: 
        - 
      exclude_profiles:
      include_profiles:
        - Any
  sonarr:
    - name: sonarr_1
      paths:
        - 
      exclude_profiles:
      include_profiles:
        - 
      exclude_series:
    - name: sonarr_2
      paths:
        - 
      exclude_profiles:
      include_profiles:
        - 
      exclude_series:
  
queinatorr:
  log_level: info
  dry_run: false
  qbittorrent:
  - name: qbittorrent_1
    starr_app: 
    move_category: 
      radarr_1: completed-movies
  - name: qbittorrent_2
    starr_app: 
      - sonarr_1
      - sonarr_2
    move_category: 
      sonarr_1: completed-series
      sonarr_2: completed-anime
    move_missing:
      sonarr_1: series
      sonarr_2: anime

movie-deletarr:
  log_level: debug
  dry_run: true