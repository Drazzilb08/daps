#       ____             _                  _____  _
#      |  _ \           | |                |  __ \| |
#      | |_) | __ _  ___| | ___   _ _ __   | |__) | | _____  __
#      |  _ < / _` |/ __| |/ / | | | '_ \  |  ___/| |/ _ \ \/ /
#      | |_) | (_| | (__|   <| |_| | |_) | | |    | |  __/>  <
#      |____/ \__,_|\___|_|\_\\__,_| .__/  |_|    |_|\___/_/\_\
#                                  | |
#                                  |_|

# Note: All these variables can be overridden by using the command line arguments simply type `bash <script_name>.sh --help` for information on usage

#------------- DEFINE VARIABLES -------------#
source_dir='/mnt/user/appdata/plex/'            # Path to your plex appdata location
destination_dir='/mnt/user/backup/plex/'        # Path to your backup folder
keep_essential=7                                # Number of essential backups to keep
full_backup=false                               # Options: (true/false) creation of entire Plex backup (yes) or essential data only (no)
                                                    # true will significantly increase the amount of time and size to create a backup
                                                    # as all metadata (potentially hundreds of thousands of files) is included in the backup.
force_full_backup=7                             # Create a full backup every (#) number of days, in addition to regular essential data (0 to disable)
                                                    # this will create an essential backup and then a full backup separately
                                                    # this setting is ignored if full_backup = true
keep_full=2                                     # number of full backups to keep - these can be very large
compress=yes                                    # Due to the size of full backups if you're using a full backup and would like to really compress your backups down as much as possible use 7Zip
dry_run=false                                   # Run script without actually making any back. Useful for testing.
quiet=false                                     # Run script without echoing actions.


#------------- DEFINE NOTIFICATION VARIABLES -------------#
# This section is not required

use_webhook=''                                  # Discord or Notifiarr webhook (Notifarr uses passthrough integration)
bot_name='Notification Bot'                     # Name your bot (Only used if using Discord webhook)
bar_color='ff0000'                              # Requires 6-digit hex color
channel='0'                                     # Required if using Notifiarr is your webhook
unraid_notify=false                             # Options(true/false) Unraid notification that the backup was performed
